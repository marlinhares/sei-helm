# aqui tem apenas alguns exemplos de variaveis, verifique em cada subchart as
# variaveis possiveis

sei-app:

    app:
        # namespace onde roda o app, salvo em alguns casos especificos deixe esse valor em branco e informe o namespace pelo helm
        namespace: ""
        
        # informe a classe do pvc onde serao criados os volumes do SEI
        # deve estar pre-instalado no seu kubernetes um provisionador nfs
        # gluster ou outro. No caso do docker-desktop ja existe um provisionador 
        # automatico que cria uma pasta na vm do host ou do linux wsl. Para isso deixe
        # o storageclass vazio
        # caso contrario tera q criar o pv manualmente
        storage:
            #storageclass: nfs-client
            storageclass: ""
        
        # as variaveis abaixo informam o namespace no qual os demais componentes
        # estao instalados, caso esteja com nome incorreto o sei nao encontrara o
        # componente    
        dbcluster: ""
        jodcluster: ""
        solrcluster: ""
        memcachedcluster: ""
    
        # indica se a automacao irah dropar e criar a base de dados
        # que foi informada abaixo para essa instancia
        dbRecreate: "true"

        # id identificador do ambiente numero unico para diferenciar as bases solr e banco
        # ATENCAO PRESTAR ATENCAO NESTA STRING
        # o as bases de dados sei e solr terao esse id no nome
        # caso instale o mesmo id com a opcao de reconstruir o banco, a automacao ira apagar os dados
        idInstalacao: "orgao1"

        protocolo: https
        host: localhost
        orgao: ORGAO1
        orgao_descricao: Orgao Helm1
        nome_complemento: Orgao Helm1
        memcached_host: memcached
        # indica se o memcached armazena a sessao do php, dispensando o sticky session
        memcached_session: "true"
   
        #chave privada do github em formato base64 onde encontra-se o fonte, veja mais informacoes no readme do projeto no githup
        # caso nao informe tera q fornecer o fonte manualmente no volume. O app vai esperar ate encontrar um volume valido
        fontes_git_privkey: ""
        gituser_repo_modulos: dummy
        gitpass_repo_modulos: dummy

sei-db:
    db:
        # namespace onde roda o db, salvo em alguns casos especificos deixe esse valor em branco e informe o namespace pelo helm
        namespace: ""

sei-jod:
    jod:
        # namespace onde roda o jod, salvo em alguns casos especificos deixe esse valor em branco e informe o namespace pelo helm
        namespace: ""

sei-memcached:
    memcached:
        # namespace onde roda o memcached, salvo em alguns casos especificos deixe esse valor em branco e informe o namespace pelo helm
        namespace: ""


sei-solr:
    solr:
        # namespace onde roda o solr, salvo em alguns casos especificos deixe esse valor em branco e informe o namespace pelo helm
        namespace: ""
        