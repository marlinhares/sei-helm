apiVersion: apps/v1
kind: Deployment
metadata:
  name: solr
  {{- with .Values.solr.namespace }}
  namespace: {{ . }}
  {{- end }}
  labels:
    {{- include "sei-solr.labels" . | nindent 4 }}
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      servico: solr
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        servico: solr
        {{- include "sei-solr.labels" . | nindent 8 }}
    spec:
      containers:
      - image: "{{ .Values.solr.image.repository }}:{{ .Values.solr.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.solr.image.pullPolicy }}
        name: solr
        #livenessProbe:
        #  failureThreshold: 3
        #  httpGet:
        #    path: /solr/admin/info/system
        #    port: 8983
        #    scheme: HTTP
        #  initialDelaySeconds: 20
        #  periodSeconds: 10
        #  successThreshold: 1
        #  timeoutSeconds: 10
        #readinessProbe:
        #  failureThreshold: 3
        #  httpGet:
        #    path: /solr/admin/info/system
        #    port: 8983
        #    scheme: HTTP
        #  initialDelaySeconds: 20
        #  periodSeconds: 10
        #  successThreshold: 1
        #  timeoutSeconds: 10
        stdin: true
        tty: true
        volumeMounts:
        - mountPath: /dados
          name: vol1
      dnsPolicy: ClusterFirst
      initContainers:
        - command:
          - bash
          - -c
          - echo "Vamos verificar se existe uma pasta com os dados do solr."; echo
            "Caso nao exista vamos criar..."; if [[ "$(ls -A /t)" = "" ]]; then
            echo "Diretorio vazio, vamos copiar os dados do solr..."; cp -a /dados/*
            /t/ && echo "Dados copiados!"; else echo "Diretorio nao esta vazio. " ;
            echo "Arquivos encontrados"; echo $(ls -lha /t); echo "Nao vamos alterar
            nada. " ; echo "Caso o solr nao suba, verifique se nesse dir existe um
            solr e que as permissoes do arquivo estejam com o Solr (id 1000)" ; fi;  exit 0
          image: "{{ .Values.solr.image.repository }}:{{ .Values.solr.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.solr.image.pullPolicy }}
          name: solr-init
          resources:
            limits:
              cpu: 100m
              memory: 64Mi
            requests:
              cpu: 100m
              memory: 64Mi
          stdin: true
          tty: true
          volumeMounts:
          - mountPath: /t
            name: vol1
      restartPolicy: Always
      terminationGracePeriodSeconds: 60
      volumes:
      - name: vol1
        persistentVolumeClaim:
          claimName: vol-sei-solr